// Bir JavaScript sayaÃ§ (counter) uygulamasÄ±nÄ±n kurgusu ÅŸÃ¶yle olabilir:
// 	1.	BaÅŸlangÄ±Ã§ Durumu
// 	â€¢	SayaÃ§ deÄŸeri baÅŸlangÄ±Ã§ta sÄ±fÄ±r olacak.
// 	â€¢	KullanÄ±cÄ±ya mevcut sayaÃ§ deÄŸerini gÃ¶stermek iÃ§in bir ekran (Ã¶rneÄŸin, bir <span> etiketi) kullanÄ±lacak.
// 	2.	KullanÄ±cÄ± EtkileÅŸimleri
// 	â€¢	ArtÄ±rma Butonu: BasÄ±ldÄ±ÄŸÄ±nda sayaÃ§ deÄŸeri 1 artacak.
// 	â€¢	Azaltma Butonu: BasÄ±ldÄ±ÄŸÄ±nda sayaÃ§ deÄŸeri 1 azalacak.
// 	â€¢	SÄ±fÄ±rlama Butonu: BasÄ±ldÄ±ÄŸÄ±nda sayaÃ§ deÄŸeri sÄ±fÄ±rlanacak.
// 	3.	Veri GÃ¼ncelleme
// 	â€¢	Her butona basÄ±ldÄ±ÄŸÄ±nda sayaÃ§ deÄŸeri gÃ¼ncellenecek ve ekrana yansÄ±tÄ±lacak.
// 	â€¢	Sayfa yenilendiÄŸinde sayaÃ§ sÄ±fÄ±rlanacak (eÄŸer tarayÄ±cÄ± depolamasÄ± kullanÄ±lmazsa).
// 	4.	Ekstra Ã–zellikler (Opsiyonel)
// 	â€¢	Negatif deÄŸerlere izin verilmemesi iÃ§in bir kontrol eklenebilir.
// 	â€¢	SayacÄ± tarayÄ±cÄ±da saklamak iÃ§in localStorage kullanÄ±labilir.
// 	â€¢	Butonlara basÄ±ldÄ±ÄŸÄ±nda animasyon veya renk deÄŸiÅŸimi gibi gÃ¶rsel efektler eklenebilir.

// Bunu geliÅŸtirmek istersen, belirli bir Ã¶zellik eklemek ister misin? ğŸš€
import "./style.css";
const counter = document.querySelector("#counter");
const increaseBtn = document.querySelector("#increase");
const decreaseBtn = document.querySelector("#decrease");
const resetBtn = document.querySelector("#reset");
document.addEventListener("dblclick", (event) => {
    event.preventDefault();
});

function getRandomHexColor() {
  return `#${Math.floor(Math.random() * 16777215)
    .toString(16)
    .padStart(6, 0)}`;
}


// 1. durum
let count = 0;
counter.textContent = count;

// 2. durum
increaseBtn.addEventListener("click", e => {
    count++;
    counter.textContent = count;
    if (count > 0) {
        counter.style.color = getRandomHexColor();
    }
})

decreaseBtn.addEventListener("click", e => {
    count--;
    counter.textContent = count;
    if (count < 0) {
        count = 0;
        counter.textContent = count;
        counter.style.color = "black";
    }
     if (count > 0) {
        counter.style.color = getRandomHexColor();
    }
})

resetBtn.addEventListener("click", e => {
    count = 0;
    counter.textContent = count;
    counter.style.color = "black";
})
